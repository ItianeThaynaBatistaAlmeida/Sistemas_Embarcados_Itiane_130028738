1. Crie dois processos, e faça com que o processo-filho gere uma onda quadrada, enquanto o processo-pai faz polling de um botão no GPIO, aumentando a frequência da onda sempre que o botão for pressionado. A frequência da onda quadrada deve começar em 1 Hz, e dobrar cada vez que o botão for pressionado. A frequência máxima é de 64 Hz, devendo retornar a 1 Hz se o botão for pressionado novamente.

//PAI
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/poll.h>
#include <unistd.h>

int main(void)
{
	struct pollfd pfd;
	char buffer;
	system("echo 4       > /sys/class/gpio/export");
	system("echo falling > /sys/class/gpio/gpio4/edge");
	system("echo in      > /sys/class/gpio/gpio4/direction");
	pfd.fd = open("/sys/class/gpio/gpio4/value", O_RDONLY);
	if(pfd.fd < 0)
	{
		puts("Erro abrindo /sys/class/gpio/gpio4/value");
		puts("Execute este programa como root");
		return 1;
	}
	read(pfd.fd, &buffer, 1);
	puts("Pressione o botao...");
	pfd.events = POLLPRI | POLLERR;
	pfd.revents = 0;
	poll(&pfd, 1, -1);
	if(pfd.revents & POLLPRI) puts("POLLPRI detectado");
	if(pfd.revents & POLLERR) puts("POLLERR detectado");
	close(pfd.fd);
	system("echo 4 > /sys/class/gpio/unexport");
	return 0;
}

//Filho

#include <unistd.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <signal.h>

int fd;
//função para fechar corretamente e unexportar os pinos
void close(){
	close(fd);
	fd = open("/sys/class/gpio/unexport",O_WRONLY);
	write(fd,"4",2);
	printf("Fechando programa\n");
	close(fd);
	sleep(1);
	exit(0);
}




int main(){

	float frequencia;
	float periodo;
	
	signal(SIGINT,fechar);

	frequencia=1;
	scanf("%f",&frequencia); //Entrada da freq pelo usuario
	periodo = 1000000/(2*(frequencia)); //Conversão de Hz para S
	
	if(pfd.revents & POLLPRI) puts(frequencia*frequencia);

	//Setando como export
	printf("Realizando o export\n");
	fd = open("/sys/class/gpio/export",O_WRONLY);
	write(fd,"4",2);
	close(fd);
	sleep(1);

	//Setando como saída
	printf("Iniciando o pin como saída\n");
	fd = open("/sys/class/gpio/gpio4/direction",O_WRONLY);
	write(fd,"out",4);
	close(fd);
	sleep(1);



	fd = open("/sys/class/gpio/gpio4/value",O_WRONLY);
	while(1){
		write(fd,"1",2);
		usleep(periodo);
		write(fd,"0",2);
		usleep(periodo);
	}

	return 0;
}